{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGoods","setSelectedGoods","goods","setState","prevState","removeSelectedGood","good","filter","remaining","clearSelectedGoods","createTitle","goodsArr","length","join","slice","this","className","type","onClick","map","buttonText","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,iBAAmB,SAACC,GAClB,EAAKC,UAAU,SAACC,GAAD,MACb,CAAEJ,cAAc,GAAD,mBAAMI,EAAUJ,eAAhB,CAA+BE,S,EAIlDG,mBAAqB,SAACC,GACpB,EAAKH,UAAU,SAAAC,GAAS,MAAK,CAC3BJ,cAAeI,EAAUJ,cAAcO,QAAO,SAAAC,GAAS,OACrDA,IAAcF,U,EAKpBG,mBAAqB,WACnB,EAAKN,SAAS,CAAEH,cAAe,M,EAGjCU,YAAc,SAACC,GACb,IAAQC,EAAWD,EAAXC,OAER,OAAQA,GACN,KAAK,EACH,MAAO,oBACT,KAAK,EACH,MAAM,GAAN,OAAUD,EAAS,GAAnB,gBACF,KAAK,EACH,MAAM,GAAN,OAAUA,EAASE,KAAK,SAAxB,iBACF,QACE,MAAM,GAAN,OAAUF,EAASG,MAAM,GAAI,GAAGD,KAAK,MAArC,gBAAkDF,EAASC,EAAS,GAApE,mB,4CAIN,WAAU,IAAD,OACCZ,EAAkBe,KAAKhB,MAAvBC,cAER,OACE,sBAAKgB,UAAU,SAAf,UACE,gCACE,oBAAIA,UAAU,kBAAd,SACGD,KAAKL,YAAYV,KAGpB,wBACEiB,KAAK,SACLD,UAAU,mBACVE,QAASH,KAAKN,mBAHhB,sBASF,oBAAIO,UAAU,gBAAd,SACGnB,EAAgBsB,KAAI,SAAAb,GACnB,IACMc,EADapB,EAAcqB,SAASf,GAEtC,SACA,SAOJ,OACE,qBAEEU,UAAU,eAFZ,UAIE,+BAAOV,IACP,wBACEW,KAAK,SACLD,UAAU,cACVE,QAfc,kBAClB,EAAKnB,MAAMC,cAAcqB,SAASf,GAC9B,EAAKD,mBAAmBC,GACxB,EAAKL,iBAAiBK,IASxB,SAKGc,MATEd,e,GAvEHgB,IAAMC,WA2FTzB,IC5Gf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7ee9c1f2.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selectedGoods: string[];\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedGoods: ['Jam'],\n  };\n\n  setSelectedGoods = (goods: string) => {\n    this.setState(((prevState: State) => (\n      { selectedGoods: [...prevState.selectedGoods, goods] }\n    )));\n  };\n\n  removeSelectedGood = (good: string) => {\n    this.setState((prevState => ({\n      selectedGoods: prevState.selectedGoods.filter(remaining => (\n        remaining !== good)),\n    }\n    )));\n  };\n\n  clearSelectedGoods = () => {\n    this.setState({ selectedGoods: [] });\n  };\n\n  createTitle = (goodsArr: string[]) => {\n    const { length } = goodsArr;\n\n    switch (length) {\n      case 0:\n        return 'No goods selected';\n      case 1:\n        return `${goodsArr[0]} is selected`;\n      case 2:\n        return `${goodsArr.join(' and ')} are selected`;\n      default:\n        return `${goodsArr.slice(0, -1).join(', ')} and ${goodsArr[length - 1]} are selected`;\n    }\n  };\n\n  render() {\n    const { selectedGoods } = this.state;\n\n    return (\n      <div className=\"select\">\n        <div>\n          <h1 className=\"select__content\">\n            {this.createTitle(selectedGoods)}\n          </h1>\n\n          <button\n            type=\"button\"\n            className=\"select__clearBtn\"\n            onClick={this.clearSelectedGoods}\n          >\n            clear\n          </button>\n        </div>\n\n        <ul className=\"select__items\">\n          {goodsFromServer.map(good => {\n            const isSelected = selectedGoods.includes(good);\n            const buttonText = isSelected\n              ? 'Remove'\n              : 'Select';\n            const handleClick = () => (\n              this.state.selectedGoods.includes(good)\n                ? this.removeSelectedGood(good)\n                : this.setSelectedGoods(good)\n            );\n\n            return (\n              <li\n                key={good}\n                className=\"select__item\"\n              >\n                <span>{good}</span>\n                <button\n                  type=\"button\"\n                  className=\"select__btn\"\n                  onClick={handleClick}\n                >\n                  {buttonText}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}